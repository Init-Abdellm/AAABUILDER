{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "required": ["id", "version", "trigger", "steps", "output"],
  "properties": {
    "id": {
      "type": "string",
      "pattern": "^[a-zA-Z][a-zA-Z0-9_-]*$"
    },
    "version": {
      "type": "integer",
      "minimum": 1
    },
    "trigger": {
      "type": "object",
      "required": ["type"],
      "properties": {
        "type": {
          "type": "string",
          "enum": ["http", "cron", "event"]
        },
        "method": {
          "type": "string",
          "enum": ["GET", "POST", "PUT", "DELETE", "PATCH"]
        },
        "path": {
          "type": "string",
          "pattern": "^/"
        }
      }
    },
    "secrets": {
      "type": "object",
      "patternProperties": {
        "^[A-Z_]+$": {
          "type": "object",
          "required": ["type", "value"],
          "properties": {
            "type": {
              "type": "string",
              "enum": ["env"]
            },
            "value": {
              "type": "string"
            }
          }
        }
      }
    },
    "vars": {
      "type": "object",
      "patternProperties": {
        "^[a-zA-Z][a-zA-Z0-9_]*$": {
          "type": "object",
          "required": ["type"],
          "properties": {
            "type": {
              "type": "string",
              "enum": ["input", "env", "literal", "string", "number", "boolean"]
            },
            "path": {
              "type": "string"
            },
            "value": {
              "type": ["string", "number", "boolean"]
            },
            "from": {
              "type": "string",
              "enum": ["input", "env", "literal"]
            },
            "required": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "steps": {
      "type": "array",
      "minItems": 1,
      "items": {
        "type": "object",
        "required": ["id", "kind"],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$"
          },
          "kind": {
            "type": "string",
            "enum": ["llm", "http", "function", "vision", "audio", "vectordb", "finetune"]
          },
          "model": {
            "type": "string"
          },
          "provider": {
            "type": "string",
            "enum": ["openai", "huggingface", "gemini", "ollama", "llama"]
          },
          "when": {
            "type": "string"
          },
          "retries": {
            "type": "integer",
            "minimum": 0
          },
          "timeout_ms": {
            "type": "integer",
            "minimum": 1000
          },
          "prompt": {
            "type": "string"
          },
          "save": {
            "type": "string"
          },
          "action": {
            "type": "string",
            "enum": ["GET", "POST", "PUT", "DELETE", "PATCH"]
          },
          "url": {
            "type": "string",
            "format": "uri"
          },
          "headers": {
            "type": "object"
          },
          "body": {
            "type": ["object", "string"]
          },
          "input": {
            "type": "string"
          },
          "operation": {
            "type": "string"
          },
          "backend": {
            "type": "string"
          },
          "collection": {
            "type": "string"
          },
          "query": {
            "type": "string"
          },
          "topK": {
            "type": "integer"
          },
          "filter": {
            "type": "object"
          },
          "documents": {
            "type": "array"
          },
          "embeddings": {
            "type": "array"
          },
          "config": {
            "type": "object"
          },
          "jobId": {
            "type": "string"
          },
          "limit": {
            "type": "integer"
          },
          "filePath": {
            "type": "string"
          },
          "format": {
            "type": "string"
          },
          "text": {
            "type": "string"
          },
          "audio": {
            "type": "string"
          },
          "voice": {
            "type": "string"
          },
          "outputPath": {
            "type": "string"
          },
          "function": {
            "type": "string"
          },
          "args": {
            "type": "object"
          }
        },
        "anyOf": [
          {
            "properties": {
              "kind": { "const": "llm" },
              "model": { "type": "string" },
              "provider": { "type": "string", "enum": ["openai", "huggingface", "gemini", "ollama", "llama"] },
              "prompt": { "type": "string" }
            },
            "required": ["model", "provider", "prompt"],
            "additionalProperties": true
          },
          {
            "properties": {
              "kind": { "const": "http" },
              "action": { "type": "string", "enum": ["GET", "POST", "PUT", "DELETE", "PATCH"] },
              "url": { "type": "string", "format": "uri" }
            },
            "required": ["action", "url"],
            "additionalProperties": true
          },
          {
            "properties": {
              "kind": { "const": "function" },
              "function": { "type": "string" }
            },
            "required": ["function"],
            "additionalProperties": true
          },
          {
            "properties": {
              "kind": { "const": "vision" },
              "model": { "type": "string" },
              "input": { "type": "string" }
            },
            "required": ["model", "input"],
            "additionalProperties": true
          },
          {
            "properties": {
              "kind": { "const": "audio" },
              "operation": { "type": "string" }
            },
            "required": ["operation"],
            "additionalProperties": true
          },
          {
            "properties": {
              "kind": { "const": "vectordb" },
              "operation": { "type": "string" },
              "backend": { "type": "string" }
            },
            "required": ["operation", "backend"],
            "additionalProperties": true
          },
          {
            "properties": {
              "kind": { "const": "finetune" },
              "operation": { "type": "string" },
              "provider": { "type": "string" }
            },
            "required": ["operation", "provider"],
            "additionalProperties": true
          }
        ]
      }
    },
    "output": {
      "type": "string"
    }
  }
}
